#include <iostream>
using namespace std;

class Currency
{
private:
    float amount;

public:
    Currency(float amt)
        : amount(amt)
    {
    }

    Currency operator+(const Currency &other) const
    {
        return Currency(amount + other.amount);
    }

    Currency operator-(const Currency &other) const
    {
        return Currency(amount - other.amount);
    }

    Currency operator-() const
    {
        return Currency(-amount);
    }

    Currency &operator+=(const Currency &other)
    {
        amount += other.amount;
        return *this;
    }

    Currency &operator-=(const Currency &other)
    {
        amount -= other.amount;
        return *this;
    }

    bool operator==(const Currency &other) const
    {
        return amount == other.amount;
    }

    friend ostream &operator<<(ostream &out, const Currency &c)
    {
        out << "Amount: " << c.amount;
        return out;
    }
};

int main()
{
    Currency price(150.0f);
    Currency discount(20.0f);
    Currency tax(15.0f);
    Currency finalAmount = price - discount + tax;

    cout << "Original Price: " << price << endl;
    cout << "Discount: " << discount << endl;
    cout << "Tax: " << tax << endl;
    cout << "Final Amount after applying discount and tax: " << finalAmount << endl;

    Currency temp = finalAmount;
    temp -= Currency(10.0f);
    cout << "After applying additional 10 unit discount: " << temp << endl;

    Currency comparison(155.0f);
    cout << "Is finalAmount equal to 155? ";
    if (finalAmount == comparison)
    {
        cout << "Yes" << endl;
    }
    else
    {
        cout << "No" << endl;
    }

    Currency negative = -finalAmount;
    cout << "Negated final amount: " << negative << endl;

    return 0;
}

